-- Create the database;
CREATE DATABASE RoomiePayDB;

-- Use the database
USE RoomiePayDB;

-- Create Users table
CREATE TABLE Users (
    UserID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    Email VARCHAR(100) UNIQUE NOT NULL,
    Password TEXT NOT NULL,
    Phone VARCHAR(15),
    JoinDate DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Create Groups table
CREATE TABLE UserGroups (
    GroupID INT AUTO_INCREMENT PRIMARY KEY,
    GroupName VARCHAR(100) NOT NULL,
    Description TEXT,
    CreationDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    InviteCode VARCHAR(20) UNIQUE NOT NULL,
    CreatedByUserID INT NOT NULL,
    FOREIGN KEY (CreatedByUserID) REFERENCES Users(UserID) ON DELETE CASCADE
);

-- Create GroupMembers table
CREATE TABLE GroupMembers (
    UserID INT NOT NULL,
    GroupID INT NOT NULL,
    IsAdmin BOOLEAN NOT NULL DEFAULT FALSE,
    JoinDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (UserID, GroupID),
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
    FOREIGN KEY (GroupID) REFERENCES UserGroups(GroupID) ON DELETE CASCADE
);

-- Create Expenses table
CREATE TABLE Expenses (
    ExpenseID INT AUTO_INCREMENT PRIMARY KEY,
    GroupID INT NOT NULL,
    PaidByUserID INT NOT NULL,
    Amount DECIMAL(10,2) NOT NULL CHECK (Amount > 0),
    Description VARCHAR(255) NOT NULL,
    Date DATETIME DEFAULT CURRENT_TIMESTAMP,
    IsSettled BOOLEAN NOT NULL DEFAULT FALSE,
    FOREIGN KEY (GroupID) REFERENCES UserGroups(GroupID) ON DELETE CASCADE,
    FOREIGN KEY (PaidByUserID) REFERENCES Users(UserID) ON DELETE CASCADE
);

-- Create Settlements table
CREATE TABLE Settlements (
    SettlementID INT AUTO_INCREMENT PRIMARY KEY,
    GroupID INT NOT NULL,
    PayerUserID INT NOT NULL,
    ReceiverUserID INT NOT NULL,
    Amount DECIMAL(10,2) NOT NULL CHECK (Amount > 0),
    Date DATETIME DEFAULT CURRENT_TIMESTAMP,
    Status ENUM('Pending', 'Confirmed') DEFAULT 'Pending',
    PaymentMethod VARCHAR(50),
    FOREIGN KEY (GroupID) REFERENCES UserGroups(GroupID) ON DELETE CASCADE,
    FOREIGN KEY (PayerUserID) REFERENCES Users(UserID) ON DELETE CASCADE,
    FOREIGN KEY (ReceiverUserID) REFERENCES Users(UserID) ON DELETE CASCADE
);

-- Create Invitations table
CREATE TABLE Invitations (
    InvitationID INT AUTO_INCREMENT PRIMARY KEY,
    GroupID INT NOT NULL,
    SenderUserID INT NOT NULL,
    RecipientEmail VARCHAR(100) NOT NULL,
    Status ENUM('Pending', 'Accepted', 'Rejected') DEFAULT 'Pending',
    InvitationDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    ExpiryDate DATETIME,
    FOREIGN KEY (GroupID) REFERENCES UserGroups(GroupID) ON DELETE CASCADE,
    FOREIGN KEY (SenderUserID) REFERENCES Users(UserID) ON DELETE CASCADE
);