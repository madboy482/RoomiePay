-- Use the database
USE RoomiePayDB;

-- Create Users table
CREATE TABLE Users (
    UserID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    Email VARCHAR(100) UNIQUE NOT NULL,
    Password TEXT NOT NULL,
    Phone VARCHAR(15),
    JoinDate DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Create Groups table
CREATE TABLE UserGroups (
    GroupID INT AUTO_INCREMENT PRIMARY KEY,
    GroupName VARCHAR(100) NOT NULL,
    Description TEXT,
    CreationDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    InviteCode VARCHAR(20) UNIQUE NOT NULL,
    CreatedByUserID INT NOT NULL,
    FOREIGN KEY (CreatedByUserID) REFERENCES Users(UserID) ON DELETE CASCADE
);

-- Create GroupMembers table
CREATE TABLE GroupMembers (
    UserID INT NOT NULL,
    GroupID INT NOT NULL,
    IsAdmin BOOLEAN NOT NULL DEFAULT FALSE,
    JoinDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (UserID, GroupID),
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
    FOREIGN KEY (GroupID) REFERENCES UserGroups(GroupID) ON DELETE CASCADE
);

-- Create Expenses table
CREATE TABLE Expenses (
    ExpenseID INT AUTO_INCREMENT PRIMARY KEY,
    GroupID INT NOT NULL,
    PaidByUserID INT NOT NULL,
    Amount DECIMAL(10,2) NOT NULL CHECK (Amount > 0),
    Description VARCHAR(255) NOT NULL,
    Date DATETIME DEFAULT CURRENT_TIMESTAMP,
    IsSettled BOOLEAN NOT NULL DEFAULT FALSE,
    FOREIGN KEY (GroupID) REFERENCES UserGroups(GroupID) ON DELETE CASCADE,
    FOREIGN KEY (PaidByUserID) REFERENCES Users(UserID) ON DELETE CASCADE
);

-- Create Settlements table
CREATE TABLE Settlements (
    SettlementID INT AUTO_INCREMENT PRIMARY KEY,
    GroupID INT NOT NULL,
    PayerUserID INT NOT NULL,
    ReceiverUserID INT NOT NULL,
    Amount DECIMAL(10,2) NOT NULL CHECK (Amount > 0),
    Date DATETIME DEFAULT CURRENT_TIMESTAMP,
    Status ENUM('Pending', 'Confirmed') DEFAULT 'Pending',
    PaymentMethod VARCHAR(50),
    FOREIGN KEY (GroupID) REFERENCES UserGroups(GroupID) ON DELETE CASCADE,
    FOREIGN KEY (PayerUserID) REFERENCES Users(UserID) ON DELETE CASCADE,
    FOREIGN KEY (ReceiverUserID) REFERENCES Users(UserID) ON DELETE CASCADE
);

-- Create Invitations table
CREATE TABLE Invitations (
    InvitationID INT AUTO_INCREMENT PRIMARY KEY,
    GroupID INT NOT NULL,
    SenderUserID INT NOT NULL,
    RecipientEmail VARCHAR(100) NOT NULL,
    Status ENUM('Pending', 'Accepted', 'Rejected') DEFAULT 'Pending',
    InvitationDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    ExpiryDate DATETIME,
    FOREIGN KEY (GroupID) REFERENCES UserGroups(GroupID) ON DELETE CASCADE,
    FOREIGN KEY (SenderUserID) REFERENCES Users(UserID) ON DELETE CASCADE
);

-- Insert sample Users
INSERT INTO Users (Name, Email, Password, Phone, JoinDate) VALUES
('Aryan Singh', 'aryan.singh@gmail.com', 'hashed_password_123', '9876543210', '2024-12-15 14:30:00'),
('Priya Sharma', 'priya.sharma@gmail.com', 'hashed_password_456', '8765432109', '2024-12-16 10:45:00'),
('Rahul Kumar', 'rahul.kumar@gmail.com', 'hashed_password_789', '7654321098', '2024-12-17 12:15:00'),
('Neha Patel', 'neha.patel@gmail.com', 'hashed_password_101', '6543210987', '2024-12-18 09:30:00'),
('Vikram Malhotra', 'vikram.malhotra@gmail.com', 'hashed_password_112', '5432109876', '2024-12-19 16:20:00');

-- Insert sample Groups
INSERT INTO UserGroups (GroupName, Description, CreationDate, InviteCode, CreatedByUserID) VALUES
('Hostel Room 301', 'Group for roommates of Hostel 301', '2025-01-01 08:00:00', 'HR301XYZ', 1),
('Trip to Goa', 'Expenses for our Goa vacation', '2025-01-05 09:15:00', 'GOATRIP2025', 2);

-- Insert sample GroupMembers
INSERT INTO GroupMembers (UserID, GroupID, IsAdmin) VALUES
(1, 1, TRUE),
(2, 1, FALSE),
(3, 1, FALSE),
(2, 2, TRUE),
(4, 2, FALSE),
(5, 2, FALSE);

-- Insert sample Expenses
INSERT INTO Expenses (GroupID, PaidByUserID, Amount, Description, Date, IsSettled) VALUES
(1, 1, 1500.00, 'Electricity Bill', '2025-01-10 14:00:00', FALSE),
(1, 3, 800.00, 'Grocery shopping', '2025-01-12 16:45:00', FALSE),
(2, 2, 5000.00, 'Hotel Booking', '2025-01-06 10:30:00', FALSE);

-- Insert sample Settlements
INSERT INTO Settlements (GroupID, PayerUserID, ReceiverUserID, Amount, Date, Status, PaymentMethod) VALUES
(1, 2, 1, 500.00, '2025-01-15 18:20:00', 'Pending', 'UPI'),
(1, 3, 1, 400.00, '2025-01-16 11:30:00', 'Confirmed', 'Bank Transfer'),
(2, 5, 2, 2500.00, '2025-01-07 09:15:00', 'Pending', 'Cash');

-- Insert sample Invitations
INSERT INTO Invitations (GroupID, SenderUserID, RecipientEmail, Status, InvitationDate, ExpiryDate) VALUES
(1, 1, 'example1@gmail.com', 'Pending', '2025-01-08 12:00:00', '2025-01-15 12:00:00'),
(2, 2, 'example2@gmail.com', 'Accepted', '2025-01-09 14:30:00', '2025-01-16 14:30:00');

-- Create indexes for better performance
CREATE INDEX idx_expense_group ON Expenses(GroupID);
CREATE INDEX idx_expense_user ON Expenses(PaidByUserID);
CREATE INDEX idx_settlement_group ON Settlements(GroupID);
CREATE INDEX idx_settlement_payer ON Settlements(PayerUserID);
CREATE INDEX idx_settlement_receiver ON Settlements(ReceiverUserID);
CREATE INDEX idx_invitation_group ON Invitations(GroupID);
CREATE INDEX idx_invitation_sender ON Invitations(SenderUserID);
CREATE INDEX idx_invitation_recipient ON Invitations(RecipientEmail);

-- Query to verify data
SELECT * FROM Users;
SELECT * FROM UserGroups;
SELECT * FROM GroupMembers;
SELECT * FROM Expenses;
SELECT * FROM Settlements;
SELECT * FROM Invitations;
