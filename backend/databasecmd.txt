-- Create the database;
CREATE DATETIME RoomiePayDB;

-- Use the database
USE RoomiePayDB;

-- Create Users table
CREATE TABLE Users (
    UserID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    Email VARCHAR(100) UNIQUE NOT NULL,
    Password TEXT NOT NULL,
    Phone VARCHAR(15),
    JoinDate DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Create Groups table
CREATE TABLE UserGroups (
    GroupID INT AUTO_INCREMENT PRIMARY KEY,
    GroupName VARCHAR(100) NOT NULL,
    Description TEXT,
    CreationDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    InviteCode VARCHAR(20) UNIQUE NOT NULL,
    CreatedByUserID INT NOT NULL,
    FOREIGN KEY (CreatedByUserID) REFERENCES Users(UserID) ON DELETE CASCADE
);

-- Create GroupMembers table
CREATE TABLE GroupMembers (
    UserID INT NOT NULL,
    GroupID INT NOT NULL,
    IsAdmin BOOLEAN NOT NULL DEFAULT FALSE,
    JoinDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (UserID, GroupID),
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
    FOREIGN KEY (GroupID) REFERENCES UserGroups(GroupID) ON DELETE CASCADE
);

-- Create Expenses table
CREATE TABLE Expenses (
    ExpenseID INT AUTO_INCREMENT PRIMARY KEY,
    GroupID INT NOT NULL,
    PaidByUserID INT NOT NULL,
    Amount DECIMAL(10,2) NOT NULL CHECK (Amount > 0),
    Description VARCHAR(255) NOT NULL,
    Date DATETIME DEFAULT CURRENT_TIMESTAMP,
    IsSettled BOOLEAN NOT NULL DEFAULT FALSE,
    FOREIGN KEY (GroupID) REFERENCES UserGroups(GroupID) ON DELETE CASCADE,
    FOREIGN KEY (PaidByUserID) REFERENCES Users(UserID) ON DELETE CASCADE
);

-- Create Settlements table
CREATE TABLE Settlements (
    SettlementID INT AUTO_INCREMENT PRIMARY KEY,
    GroupID INT NOT NULL,
    PayerUserID INT NOT NULL,
    ReceiverUserID INT NOT NULL,
    Amount DECIMAL(10,2) NOT NULL CHECK (Amount > 0),
    Date DATETIME DEFAULT CURRENT_TIMESTAMP,
    Status ENUM('Pending', 'Confirmed') DEFAULT 'Pending',
    PaymentMethod VARCHAR(50),
    FOREIGN KEY (GroupID) REFERENCES UserGroups(GroupID) ON DELETE CASCADE,
    FOREIGN KEY (PayerUserID) REFERENCES Users(UserID) ON DELETE CASCADE,
    FOREIGN KEY (ReceiverUserID) REFERENCES Users(UserID) ON DELETE CASCADE
);

-- Create Invitations table
CREATE TABLE Invitations (
    InvitationID INT AUTO_INCREMENT PRIMARY KEY,
    GroupID INT NOT NULL,
    SenderUserID INT NOT NULL,
    RecipientEmail VARCHAR(100) NOT NULL,
    Status ENUM('Pending', 'Accepted', 'Rejected') DEFAULT 'Pending',
    InvitationDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    ExpiryDate DATETIME,
    FOREIGN KEY (GroupID) REFERENCES UserGroups(GroupID) ON DELETE CASCADE,
    FOREIGN KEY (SenderUserID) REFERENCES Users(UserID) ON DELETE CASCADE
);

-- Insert sample Users
INSERT INTO Users (UserID, Name, Email, Password, Phone, JoinDate) VALUES
(1, 'Aryan Singh', 'aryan@gmail.com', 'pwd123', '9876543210', '2025-01-01'),
(2, 'Priya Sharma', 'priya@gmail.com', 'pwd234', '9876543211', '2025-01-02'),
(3, 'Rahul Mehra', 'rahul@gmail.com', 'pwd345', '9876543212', '2025-01-03'),
(4, 'Neha Reddy', 'neha@gmail.com', 'pwd456', '9876543213', '2025-01-04'),
(5, 'Rohan Verma', 'rohan@gmail.com', 'pwd567', '9876543214', '2025-01-05'),
(6, 'Simran Kaur', 'simran@gmail.com', 'pwd678', '9876543215', '2025-01-06'),
(7, 'Ankit Jain', 'ankit@gmail.com', 'pwd789', '9876543216', '2025-01-07'),
(8, 'Ishita Roy', 'ishita@gmail.com', 'pwd890', '9876543217', '2025-01-08'),
(9, 'Vikram Das', 'vikram@gmail.com', 'pwd901', '9876543218', '2025-01-09'),
(10, 'Tanvi Joshi', 'tanvi@gmail.com', 'pwd012', '9876543219', '2025-01-10'),
(11, 'Harsh Vardhan', 'harsh@gmail.com', 'pwd013', '9876543220', '2025-01-11'),
(12, 'Megha Tiwari', 'megha@gmail.com', 'pwd014', '9876543221', '2025-01-12'),
(13, 'Aditya Rao', 'aditya@gmail.com', 'pwd015', '9876543222', '2025-01-13'),
(14, 'Kritika Bansal', 'kritika@gmail.com', 'pwd016', '9876543223', '2025-01-14'),
(15, 'Dev Patel', 'dev@gmail.com', 'pwd017', '9876543224', '2025-01-15');

-- Insert sample Groups
INSERT INTO UserGroups (GroupID, GroupName, Description, InviteCode, CreatedByUserID) VALUES
(1, 'Room 101', 'Flatmates sharing expenses', 'INV101', 1),
(2, 'Trip to Goa', 'Goa vacation group', 'GOA2025', 2),
(3, 'Startup Project', 'Shared SaaS hosting', 'SAASX1', 3),
(4, 'Room 202', 'Shared hostel room expenses', 'ROOM202', 4),
(5, 'Girls Hostel Block C', 'Shared supplies & bills', 'GIRLSC', 6),
(6, 'Manali Trip', 'Trip planning expenses', 'MANALI24', 7),
(7, 'PG Food Split', 'Food delivery and groceries', 'FOODPG', 5),
(8, 'Office Team Lunches', 'Splitting office snacks/lunches', 'OFFLUNCH', 8),
(9, 'Home Repairs', 'Parent/children house work split', 'HOMEREP', 9),
(10, 'Exam Time Snacks', 'Tea and midnight Maggie', 'EXAMFUEL', 10),
(11, 'Internship Expenses', 'Shared cab & metro costs', 'INTERN25', 11),
(12, 'Birthday Pool', 'Pool funds for birthdays', 'BDAYPOOL', 12),
(13, 'Netflix Sharing', 'Streaming cost split', 'NETSHARE', 13),
(14, 'Flat Deposit Return', 'Security deposit calculation', 'FLATSEC', 14),
(15, 'Festival Celebrations', 'Decorations, sweets etc.', 'FEST2025', 15);

-- Insert sample GroupMembers
INSERT INTO GroupMembers (UserID, GroupID, IsAdmin) VALUES
(1, 1, TRUE), (2, 1, FALSE), (3, 1, FALSE),
(2, 2, TRUE), (4, 2, FALSE), (5, 2, FALSE),
(3, 3, TRUE), (6, 3, FALSE), (7, 3, FALSE),
(4, 4, TRUE), (8, 4, FALSE), (9, 4, FALSE),
(6, 5, TRUE), (10, 5, FALSE), (11, 5, FALSE),
(7, 6, TRUE), (1, 6, FALSE), (5, 6, FALSE),
(5, 7, TRUE), (3, 7, FALSE), (11, 7, FALSE),
(8, 8, TRUE), (9, 8, FALSE), (10, 8, FALSE),
(9, 9, TRUE), (12, 9, FALSE), (13, 9, FALSE),
(10, 10, TRUE), (14, 10, FALSE), (15, 10, FALSE);

-- Insert sample Expenses
INSERT INTO Expenses (ExpenseID, GroupID, PaidByUserID, Amount, Description, Date, IsSettled) VALUES
(1, 1, 1, 1200.00, 'Electricity bill', '2025-02-01', FALSE),
(2, 1, 2, 900.00, 'Groceries', '2025-02-02', FALSE),
(3, 2, 2, 5400.00, 'Hotel booking', '2025-02-05', TRUE),
(4, 2, 5, 1800.00, 'Cab from airport', '2025-02-06', FALSE),
(5, 3, 3, 3200.00, 'Domain & hosting', '2025-02-04', TRUE),
(6, 4, 4, 1500.00, 'Room cleaning supplies', '2025-02-03', FALSE),
(7, 5, 6, 400.00, 'Snacks', '2025-02-02', FALSE),
(8, 6, 7, 8000.00, 'Bus booking', '2025-01-31', TRUE),
(9, 7, 5, 650.00, 'Milk & Bread', '2025-02-03', FALSE),
(10, 8, 8, 1100.00, 'Pizza Party', '2025-02-01', TRUE),
(11, 9, 9, 4300.00, 'Plumbing fix', '2025-02-04', FALSE),
(12, 10, 10, 300.00, 'Chai & biscuits', '2025-02-01', FALSE),
(13, 11, 11, 950.00, 'Metro card recharge', '2025-02-02', TRUE),
(14, 12, 12, 1500.00, 'Cake and balloons', '2025-02-01', FALSE),
(15, 13, 13, 499.00, 'Netflix monthly', '2025-02-01', TRUE);

-- Insert sample Settlements
INSERT INTO Settlements (SettlementID, GroupID, PayerUserID, ReceiverUserID, Amount, Date, Status, PaymentMethod) VALUES
(1, 1, 2, 1, 600.00, '2025-02-10', 'Confirmed', 'UPI'),
(2, 1, 3, 1, 600.00, '2025-02-11', 'Confirmed', 'Bank Transfer'),
(3, 2, 4, 2, 1800.00, '2025-02-12', 'Pending', 'Cash'),
(4, 3, 6, 3, 1600.00, '2025-02-13', 'Confirmed', 'Google Pay'),
(5, 4, 8, 4, 750.00, '2025-02-14', 'Pending', 'Paytm'),
(6, 5, 10, 6, 200.00, '2025-02-15', 'Confirmed', 'PhonePe'),
(7, 6, 1, 7, 2666.66, '2025-02-16', 'Pending', 'UPI'),
(8, 7, 11, 5, 216.66, '2025-02-17', 'Confirmed', 'Cash'),
(9, 8, 10, 8, 550.00, '2025-02-18', 'Pending', 'Paytm'),
(10, 9, 12, 9, 1433.33, '2025-02-19', 'Confirmed', 'Bank Transfer'),
(11, 10, 14, 10, 100.00, '2025-02-20', 'Confirmed', 'NEFT'),
(12, 11, 11, 13, 300.00, '2025-02-20', 'Pending', 'UPI'),
(13, 12, 15, 12, 500.00, '2025-02-21', 'Confirmed', 'Cash'),
(14, 13, 14, 13, 166.00, '2025-02-22', 'Confirmed', 'Google Pay'),
(15, 14, 1, 14, 5000.00, '2025-02-23', 'Pending', 'Bank Transfer');

-- Insert sample Invitations
INSERT INTO Invitations (InvitationID, GroupID, SenderUserID, RecipientEmail, Status, InvitationDate, ExpiryDate) VALUES
(1, 1, 1, 'newroomie@gmail.com', 'Pending', '2025-01-20', '2025-01-27'),
(2, 2, 2, 'rohan.friend@gmail.com', 'Accepted', '2025-01-21', '2025-01-28'),
(3, 3, 3, 'techmate@gmail.com', 'Rejected', '2025-01-22', '2025-01-29'),
(4, 4, 4, 'hostelmate@gmail.com', 'Accepted', '2025-01-23', '2025-01-30'),
(5, 5, 6, 'hostelbuddy@gmail.com', 'Pending', '2025-01-24', '2025-01-31'),
(6, 6, 7, 'trekker@gmail.com', 'Accepted', '2025-01-25', '2025-02-01'),
(7, 7, 5, 'pgmate@gmail.com', 'Pending', '2025-01-26', '2025-02-02'),
(8, 8, 8, 'colleague@gmail.com', 'Rejected', '2025-01-27', '2025-02-03'),
(9, 9, 9, 'sister@gmail.com', 'Accepted', '2025-01-28', '2025-02-04'),
(10, 10, 10, 'studybuddy@gmail.com', 'Pending', '2025-01-29', '2025-02-05'),
(11, 11, 11, 'internpal@gmail.com', 'Accepted', '2025-01-30', '2025-02-06'),
(12, 12, 12, 'bdayplanner@gmail.com', 'Rejected', '2025-01-31', '2025-02-07'),
(13, 13, 13, 'binger@gmail.com', 'Accepted', '2025-02-01', '2025-02-08'),
(14, 14, 14, 'oldflatmate@gmail.com', 'Pending', '2025-02-02', '2025-02-09'),
(15, 15, 15, 'festivalpal@gmail.com', 'Accepted', '2025-02-03', '2025-02-10');

-- Create indexes for better performance
CREATE INDEX idx_expense_group ON Expenses(GroupID);
CREATE INDEX idx_expense_user ON Expenses(PaidByUserID);
CREATE INDEX idx_settlement_group ON Settlements(GroupID);
CREATE INDEX idx_settlement_payer ON Settlements(PayerUserID);
CREATE INDEX idx_settlement_receiver ON Settlements(ReceiverUserID);
CREATE INDEX idx_invitation_group ON Invitations(GroupID);
CREATE INDEX idx_invitation_sender ON Invitations(SenderUserID);
CREATE INDEX idx_invitation_recipient ON Invitations(RecipientEmail);

-- Query to verify data
SELECT * FROM Users;
SELECT * FROM UserGroups;
SELECT * FROM GroupMembers;
SELECT * FROM Expenses;
SELECT * FROM Settlements;
SELECT * FROM Invitations;
